let arrayMap = [
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '_',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '1',
      '_',
      '1',
      '1',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '1',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '_',
      '_',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '1',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '_',
      '1',
    ],
    [
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
      '1',
    ],
  ];
  
  class GameMap {
    constructor(sizeSquare) {
      this.miniMap = arrayMap;
      this.sizeSquare = sizeSquare;
      this.worldMap = {};
      this.get_map();
    }
  
    get_map() {
      for (let j in this.miniMap) {
        for (let i in this.miniMap[j]) {
          if (this.miniMap[j][i] == '1') {
            this.worldMap[`${j},${i}`] = this.miniMap[j][i];
          }
        }
      }
    }
  
    draw_map(ctx) {
      for (let pos in this.worldMap) {
        let firstIndex = parseInt(pos.substring(0, pos.indexOf(',')));
        let lastIndex = parseInt(pos.substring(pos.indexOf(',') + 1));
        ctx.strokeStyle = 'white';
        ctx.strokeRect(
          firstIndex * this.sizeSquare,
          lastIndex * this.sizeSquare,
          this.sizeSquare,
          this.sizeSquare
        );
      }
    }
  }
  
  module.exports = GameMap;
  